{"version":3,"sources":["video-1.mp4","App.js","reportWebVitals.js","index.js"],"names":["manyMore","result","index","push","loop","id","src","aaa","type","onPlayClick","waitSec","Math","random","setTimeout","vid","document","getElementById","play","volume","onPauseClick","pause","App","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4IAAe,G,UAAA,IAA0B,qC,OCKnCA,EAAW,WAEf,IADA,IAAMC,EAAS,GACNC,EAAQ,EAAGA,EAJT,GAIuBA,IAChCD,EAAOE,KACL,wBAAOC,MAAI,EAACC,GAAE,eAAUH,GAAxB,UACE,wBAAQI,IAAKC,EAAKC,KAAK,cADzB,mDAMJ,OAAOP,GAGHQ,EAAc,WAClB,IADyB,IAAD,WACfP,GACP,IAAMQ,EAA0B,IAAhBC,KAAKC,SACrBC,YAAW,WACT,IAAMC,EAAMC,SAASC,eAAT,eAAgCd,IAC5CY,EAAIG,OACJH,EAAII,OAAS,KACZR,IANIR,EAAQ,EAAGA,EAhBT,GAgBuBA,IAAU,EAAnCA,IAULiB,EAAe,WACnB,IAAK,IAAIjB,EAAQ,EAAGA,EA3BT,GA2BuBA,IAAS,CAC7Ba,SAASC,eAAT,eAAgCd,IACxCkB,UAmBOC,MAff,WACE,OACE,gCACE,wBAAQC,QAASb,EAAjB,kBAGA,wBAAQa,QAASH,EAAjB,mBAGA,uBACCnB,QClCQuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,K","file":"static/js/main.c7ba7f53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/video-1.be93471b.mp4\";","import './App.css';\nimport aaa from './video-1.mp4'\n\nconst size = 50\n\nconst manyMore = () => {\n  const result = []\n  for (let index = 0; index < size; index++) {\n    result.push(\n      <video loop id={`video${index}`}>\n        <source src={aaa} type=\"video/mp4\" />\n          Your browser does not support the video tag.\n      </video>\n    )\n  }\n  return result\n}\n\nconst onPlayClick = () => {\n  for (let index = 0; index < size; index++) {\n    const waitSec = Math.random() * 1000\n    setTimeout(() => {\n      const vid = document.getElementById(`video${index}`);\n      vid.play();\n      vid.volume = 0.1;\n    }, waitSec)\n  }\n}\n\nconst onPauseClick = () => {\n  for (let index = 0; index < size; index++) {\n    const vid = document.getElementById(`video${index}`);\n    vid.pause();\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <button onClick={onPlayClick}>\n        play\n      </button>\n      <button onClick={onPauseClick}>\n        pause\n      </button>\n      <br />\n      {manyMore()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}